from bs4 import Tag

from vBulletinThreadUtils.html2bbcode import parse_children_in_node


class MessageProcessor(object):
    """
        Interface for all kinds of message processor

        Every specialized class should implement the process_message method
        that reads a message and does some work on it

        The message is a HTML node as generated by beautiful soup that
        contains the table entry of the post
    """

    def process_message(self, post_id: str, message: Tag):
        raise NotImplementedError("Should have implemented this")


class MessageHTMLToText(MessageProcessor):

    def process_message(self, post_id: str, message: Tag):
        return message.prettify(formatter="minimal")


class MessageHTMLToPlainText(MessageProcessor):

    def process_message(self, post_id: str, message: Tag):
        """
        :param post_id: not used
        :param message: a bs4 Tag node
        :return: The plain text of the message, that is: the text with quotes and all formatting removed.
        """
        quotes = message.select('div > table > tr > td.alt2')
        if not quotes:
            pass
        for quote in quotes:
            # to handle quotes inside of quotes
            if not quote.decomposed:
                quote_root = quote.parent.parent.parent
                quote_root.decompose()
        scripts = message.select('script')
        for script in scripts:
            script.decompose()
        return message.text


class MessageHTMLToBBCode(MessageProcessor):

    def process_message(self, post_id: str, message: Tag):
        return parse_children_in_node(message)
